[
    {
        "description": "remote ref, containing refs itself",
        "schema": {"$ref": "https://json-schema.org/draft/2019-09/schema"},
        "tests": [
            {
                "description": "remote ref valid",
                "data": {"minLength": 1},
                "valid": true
            },
            {
                "description": "remote ref invalid",
                "data": {"minLength": -1},
                "valid": false
            }
        ]
    },
    {
        "description": "$ref to boolean schema false",
        "schema": {
            "$ref": "#/$defs/bool",
            "$defs": {
                "bool": false
            }
        },
        "tests": [
            {
                "description": "any value is invalid",
                "data": "foo",
                "valid": false
            }
        ]
    },
    {
        "description": "$ref to boolean schema true",
        "schema": {
            "$ref": "#/$defs/bool",
            "$defs": {
                "bool": true
            }
        },
        "tests": [
            {
                "description": "any value is valid",
                "data": "foo",
                "valid": true
            }
        ]
    },
    {
        "description": "ref creates new scope when adjacent to keywords",
        "schema": {
            "$defs": {
                "A": {
                    "unevaluatedProperties": false
                }
            },
            "properties": {
                "prop1": {
                    "type": "string"
                }
            },
            "$ref": "#/$defs/A"
        },
        "tests": [
            {
                "description": "referenced subschema doesn't see annotations from properties",
                "data": {
                    "prop1": "match"
                },
                "valid": false
            }
        ]
    }
]
